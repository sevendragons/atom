# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
    # HTML: .text.html.basic
    # CSS: .source.css
    # SASS: .source.sass
    # JavaScript: .source.js
    # JSON: .source.json
    # PHP: .text.html.php
    # Java: .source.java
    # Ruby: .text.html.erb
    # Python: .source.python
    # plain text (including markdown): .text.plain

'.text.html.basic':
  'fontawesome':
    'prefix': 'fontawesome'
    'body': """
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.10/css/all.css" integrity="sha384-+d0P83n9kaQMCwj8F4RJB66tzIwOKmrdb46+porD/OvrJ+37WqIM7UoBtwHO6Nlg" crossorigin="anonymous">
     """
   'jquery':
     'prefix': 'jquerylink'
     'body': """
        <script src="https://code.jquery.com/jquery-3.3.1.min.js" charset="utf-8"></script>
      """
   'bootstrap':
     'prefix': 'bootstrap'
     'body': """
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">
      """
   'bootstrapJS':
     'prefix': 'bootstrapJS'
     'body': """
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T" crossorigin="anonymous"></script>
      """
   'animateCss':
     'prefix': 'animateCss'
     'body': """
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css">
      """
  #Table
  'Table_format':
    'prefix': 'table1'
    'body': """
        <table summary="$1">
              <thead>
                <tr>
                  <th>$2</th>
                  <th>$3</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>$4</td>
                  <td>$5</td>
                </tr>
                <tr>
                  <td>$6</td>
                  <td>$7</td>
                </tr>
              </tbody>
            </table>
    """
#Comment
  'Comment_html':
    'prefix': 'cmmhtml'
    'body': """
    <!-- ************************************************************* -->
    <!-- ${1:Partial Description} -->
    <!-- *************************************************************  -->
    """
#Form google map
  'Google_map':
    'prefix': 'map'
    'body': """
      <form action="http://maps.google.com/maps" method="get" target="_blank">
         <label for="saddr">Enter your location</label>
         <input type="text" name="saddr" />
         <input type="hidden" name="daddr" value="350 5th Ave New York, NY 10018 (Empire State Building)" />
         <input type="submit" value="Get directions" />
      </form>
      <!--saddr = blank input field for entering START address-->
      <!--daddr = hard-coded END address-->
    """
  #VueJS CDN
  'VueJS':
    'prefix': 'vuejs'
    'body': """
      <script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
    """


#####################---snippet_CSS---########################
#Comment
'.source.css':
  'Comment_css':
      'prefix': 'cmmcss'
      'body': """
        /*--------------------------------------------------------------*/
        /* ${1:Partial Description}
        /*--------------------------------------------------------------*/
      """
 #Format Comment
  'Format_css':
      'prefix': 'format-css'
      'body': """
        /*---------- Header ----------*/
        ${1:$}
        /*---------- End Header ----------*/
        /*---------- Main ----------*/

        /*---------- End Main ----------*/
        /*---------- Footer ----------*/

        /*---------- End-Footer ----------*/
      """
#Clearfix
  'Clearfix':
      'prefix': 'clearfix'
      'body': """
          .clearfix:after {
          content: "";
          display: table;
          clear: both;
        }
      """
#mediaScreen
  'mediaScreen':
      'prefix': 'mediaScreen'
      'body': """
          @media screen and (min-width: $1){

          }
      """
#visualhidden
  'visualhidden':
      'prefix': 'visual-hidden'
      'body': """
          .visuallyhidden {
          position: absolute;
          overflow: hidden;
          clip: rect(0 0 0 0);
          height: 1px; width: 1px;
          margin: -1px; padding: 0; border: 0;
        }
      """
'.source.js':
  'ready, click function':
    'prefix': 'clickFunc'
    'body': """
      $(document).ready(function(){
        $($1).click(function(){
        });
      });
     """
  'console, table()':
   'prefix': 'tb'
   'body': """
     console.table($1);
    """
  'get name element':
   'prefix': 'getn'
   'body': """
     ${1:document}.getElementByName('$2');
    """
  'poop poop':
   'prefix': 'poop'
   'body': """
      ðŸ’©
    """
  'console, info':
   'prefix': 'info'
   'body': """
     console.info('$1');
    """
  'console, assert':
   'prefix': 'assert'
   'body': """
     console.assert($1);
    """
  'console, clear':
   'prefix': 'clear'
   'body': """
     console.clear($1);
    """
  'console, group':
   'prefix': 'group'
   'body': """
     console.group($1);
    """
  'console, groupEnd':
   'prefix': 'endgroup'
   'body': """
     console.groupEnd($1);
    """
  'console, count':
   'prefix': 'count'
   'body': """
     console.count($1);
    """
  'console, timing':
   'prefix': 'timing'
   'body': """
     console.time($1);
    """
  'console, timeEnd':
   'prefix': 'timeEnd'
   'body': """
     console.timeEnd($1);
    """
  'addEventListener':
   'prefix': 'addeventlistener'
   'body': """
      addEventListener(${1:type: DOMString}, ${2:callback: EventListener}, ${3: capture?: boolean});
    """
  'createElement':
   'prefix': 'createElement'
   'body': """
      ${1:document}.createElement('$2');
    """
  'setAttribute':
   'prefix': 'setAttribute'
   'body': """
      setAttribute('${1:name}', '${2:value}')
    """
  'setInterval':
   'prefix': 'setInterval'
   'body': """
      setInterval(${1:function()}, '${2:milliseconds}, ${3:param1}, ${4:param1}')
    """
  'removeEventListener':
   'prefix': 'removeeventlistener'
   'body': """
      removeEventListener(${1:type: DOMString}, ${2:callback: EventListener}, ${3: capture?: boolean});
    """
  'import':
   'prefix': 'importv'
   'body': """
   import ${1} from './${1}'
    """
  'import{}':
   'prefix': 'import{}'
   'body': """
   import {${1}} from '${1}'
    """
  'function':
   'prefix': 'fuc'
   'body': """
      function ${1:functionName}(${2}){

      }
    """
  # Comment
  'Comment_javascript':
    'prefix': 'cmmjavascript'
    'body': """
      /*--------------------------------------------------------------*/
      /* ${1:Partial Description}
      /*--------------------------------------------------------------*/
    """
  # React
  'React_Import':
    'prefix': 'react'
    'body': """
      import ${1:React} from 'react'
    """
  # Redux
  'Redux_Import':
    'prefix': 'redux'
    'body': """
      import {${1:connect}} from '${1:react-}redux'
    """
